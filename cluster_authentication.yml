---
- name: Get available updates in OpenShift cluster
  hosts: localhost
  connection: local
  gather_facts: false
  module_defaults:
    group/redhat.openshift.openshift:
      host: https://api.openshift.training:6443
    group/kubernetes.core.k8s:
      host: https://api.openshift.training:6443

  tasks:
    - name: Get pass for admin
      delegate_to: localhost
      ansible.builtin.include_vars:
        file: vars.yaml
        name: config

    - name: Log in (obtain access token)
      delegate_to: localhost
      redhat.openshift.openshift_auth:
        username: alex
        password: "{{ config.cluster_admin_password }}"
        validate_certs: no
      register: auth_result
      
    - name: Get available updates api_key
      delegate_to: localhost
      kubernetes.core.k8s_info:
        kind: ClusterVersion
        api_version: config.openshift.io/v1
        namespace: openshift-config
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: false
      register: available_updates
      when: auth_result.openshift_auth.api_key is defined

    # - name: debug result
    #   delegate_to: localhost
    #   debug:
    #     msg: "{{ available_updates }}"

    - name: Set fact current channel
      ansible.builtin.set_fact:
        channel: "{{ available_updates.resources[0].spec.channel }}"
        updates: "{{ available_updates.resources[0].status }}"

    - name: Display available updates
      delegate_to: localhost
      debug:
        msg: "{{ updates | json_query( \"availableUpdates[?contains(channels,'\" + channel + \"')].version\") }}"

    - name: Set fact Admin ack required
      ansible.builtin.set_fact:
        admin_ack: "{{ (updates | json_query( \"conditions[?reason=='AdminAckRequired'].status\") | join()) }}"

    - name: patch admin ack for upgrade for 4.12
      delegate_to: localhost
      kubernetes.core.k8s:
        api_version: v1
        kind: ConfigMap
        namespace: openshift-config
        name: admin-acks
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: no
        state: patched
        definition:
          data:
            ack-4.12-kube-1.26-api-removals-in-4.13: "true"
      when:
        - auth_result.openshift_auth.api_key is defined 
        - admin_ack == false
        - channel is search("4.12")

    - name: patch admin ack for upgrade for 4.13
      delegate_to: localhost
      kubernetes.core.k8s:
        api_version: v1
        kind: ConfigMap
        namespace: openshift-config
        name: admin-acks
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: no
        state: patched
        definition:
          data:
            ack-4.13-kube-1.27-api-removals-in-4.14: "true"
      when:
        - auth_result.openshift_auth.api_key is defined 
        - admin_ack == false
        - channel is search("4.13")

    - name: Pausing Machine Healt Checks
      delegate_to: localhost
      kubernetes.core.k8s:
        api_version: machine.openshift.io/v1beta1
        kind: MachineHealthCheck
        namespace: openshift-machine-api
        name: machine-api-termination-handler
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: no
        state: patched
        definition:
          metadata:
            annotations:
              cluster.x-k8s.io/paused: ""

    - name: Update cluster
      delegate_to: localhost
      kubernetes.core.k8s:
        kind: ClusterVersion
        api_version: config.openshift.io/v1
        name: version
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: false
        wait: yes
        wait_condition:
          reason: PayloadLoaded
          status: True
          type: ReleaseAccepted
        wait_sleep: 30
        wait_timeout: 3600
        state: patched
        definition:
          spec:
            desiredUpdate:
              version: "{{ desired_version }}"
      register: upgrade_result
      when: 
        - auth_result.openshift_auth.api_key is defined
        - desired_version is defined

    - name: get result upgrade
      debug:
        var: upgrade_result

    - name: Waiting cluster
      delegate_to: localhost
      kubernetes.core.k8s_info:
        kind: ClusterVersion
        api_version: config.openshift.io/v1
        name: version
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: false
        wait: yes
        wait_condition:
          reason: ClusterOperatorsUpdating
          status: False
          type: Progressing
        wait_sleep: 30
        wait_timeout: 7200
      when: 
        - auth_result.openshift_auth.api_key is defined
        - desired_version is defined

    - name: Remove pause Machine Healt Checks
      delegate_to: localhost
      kubernetes.core.k8s:
        api_version: machine.openshift.io/v1beta1
        kind: MachineHealthCheck
        namespace: openshift-machine-api
        name: machine-api-termination-handler
        api_key: "{{ auth_result.openshift_auth.api_key }}"
        validate_certs: no
        state: patched
        definition:
          metadata:
            annotations:
              cluster.x-k8s.io/paused: NULL




